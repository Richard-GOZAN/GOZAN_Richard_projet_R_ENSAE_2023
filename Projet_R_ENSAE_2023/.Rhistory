geom_sf_text(data=senegal, aes(label=NAME_1))+
geom_sf(data = projet_map, aes(color = q25), size =3) +
scale_color_manual(values=c("blue", "red", "green", "yellow")) +
labs(title = "Répartition des PME suivant le niveau d'instruction",
subtitle = "Carte du Sénégal") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, face = "bold"))+
annotation_north_arrow(location = "tl", scale = 0.05)
install.packages("ggspatial")
knitr::opts_chunk$set(message = FALSE,warning = FALSE)
# Chargement les données
feuille1 <- read_excel("Bases/Base_Partie 2.xlsx", sheet = 1)
library(readxl)
library(dplyr)
library(gtsummary)
library(gt)
library(sf)
library(leaflet)
library(ggplot2)
library(flextable)
library(ggspatial)
library(broom)
library(questionr)
library(lubridate)
# Chargement les données
feuille1 <- read_excel("Bases/Base_Partie 2.xlsx", sheet = 1)
View(feuille1)
# Renommons la variable "country_destination" en "destination" et
# définissons les valeurs négatives comme manquantes
feuille1 <- feuille1 %>%
rename(destination = country_destination) %>%
mutate(destination = ifelse(destination < 0, NA, destination))
# Calculer la médiane des valeurs non aberrantes (différentes de 999) dans la variable "age" et remplacer les valeurs 999 par la médiane
feuille1 <- feuille1 %>%
mutate(age = replace(age, age == 999, median(age[age != 999], na.rm = TRUE)))
View(feuille1)
max(feuille1$age)
# Créons la variable tranche_age contenant des tranches d'âge de
# 5 ans
feuille1 <- feuille1 %>%
mutate(tranche_age = cut(age, breaks = seq(0, max(age), by = 5), include.lowest = TRUE))
feuille1 <- feuille1 %>%
group_by(enumerator) %>%
mutate(nombre_entretiens = n()) %>%
ungroup()
feuille1 <- feuille1 %>%
mutate(groupe = {set.seed(123); sample(c(0, 1), size = n(), replace = TRUE)})
# Charger les données de la deuxième feuille
feuille2 <- read_excel("Bases/Base_Partie 2.xlsx", sheet = 2)
# Fusion
feuille1 <- feuille1 %>%
left_join(feuille2, by = "district")
feuille1 <- feuille1 %>%
mutate(duree_entretien = endtime - starttime) %>%
group_by(enumerator) %>%
mutate(duree_moyenne_entretien = mean(duree_entretien)) %>%
ungroup()
copie = feuille1
feuille1 <- feuille1 %>%
rename_all(~paste0("endline_", .))
feuille1 %>%
tbl_summary(
by = endline_district,
include = c("endline_age", "endline_children_num"),
type = list(endline_children_num = "continuous"),
statistic = all_continuous() ~ "{mean}",
label=list( endline_age~ "Age moyen",
endline_children_num ~ "Nombre moyen d'enfants")
) %>%
add_overall() %>%
modify_header(label ~ "") %>%
modify_spanning_header(all_stat_cols() ~ "**District**") %>%
bold_labels() %>%
as_flex_table() %>%
fontsize(size = 10) %>%
width(width = 0.6)
### différence d'âge entre les sexe
feuille1 %>% tbl_summary(
include = c(endline_age),
by = endline_sex,
statistic = ~"{mean}",
label = list(endline_age ~ "Age du répondant"),
digits = ~ 1
)%>% bold_labels() %>% italicize_levels() %>%
add_difference() %>%
modify_header(list(all_stat_cols() ~ "{level} \n {n}, ({style_percent(p)}%)")
)
ggplot(feuille1, aes(x = endline_children_num, y = endline_age))+
geom_point(size = 2, alpha = 0.5, color = "#0072B2") +
labs(x = "Nombre d'enfants", y = "Âge") +
theme_minimal() +
scale_x_continuous(limits = c(0, 6) ,breaks = seq(0, 6, 1)) +
scale_y_continuous(limits = c(0, 50), breaks = seq(0, 50, 5))
library(nnet)
regm <- multinom(intention ~ groupe ,data = copie)
tbl <- tbl_regression(regm, exponentiate = TRUE)
tbl
library(GGally)
ggcoef_multinom(
regm,
exponentiate = TRUE)
library(effects)
plot(allEffects(regm))
# Modèle A : Modèle vide - Effet du traitement sur les intentions
modele_A <- multinom(intention ~ groupe, data = copie)
tableau_A <- tbl_regression(modele_A)
# Modèle B : Effet du traitement sur les intentions en tenant compte de l'âge et du sexe
modele_B <- multinom(intention ~ groupe + age + sex, data = copie)
tableau_B <- tbl_regression(modele_B)
# Modèle C : Identique au modèle B mais en contrôlant le district
modele_C <- multinom(intention ~ groupe + age + sex + district, data = copie)
ggcoef_multinom(
modele_C,
exponentiate = TRUE)
plot(allEffects(modele_C))
tableau_C <- tbl_regression(modele_C)
# Création du tableau récapitulatif des résultats des trois modèles
tableau_final <- tbl_merge(
list(tableau_A, tableau_B, tableau_C),
tab_spanner = c("Modèle A","Modèle B","Modèle C"))%>%
modify_header(label ~ "") %>%
as_flex_table()
# Affichage du tableau final
tableau_final
# Modèle A : Modèle vide - Effet du traitement sur les intentions
modele_A <- multinom(intention ~ groupe, data = copie)
tableau_A <- tbl_regression(modele_A)
# Modèle B : Effet du traitement sur les intentions en tenant compte de l'âge et du sexe
modele_B <- multinom(intention ~ groupe + age + sex, data = copie)
tableau_B <- tbl_regression(modele_B)
# Modèle C : Identique au modèle B mais en contrôlant le district
modele_C <- multinom(intention ~ groupe + age + sex + district, data = copie)
ggcoef_multinom(
modele_C,
exponentiate = TRUE)
plot(allEffects(modele_C))
tableau_C <- tbl_regression(modele_C)
# Création du tableau récapitulatif des résultats des trois modèles
tableau_final <- tbl_stack(
list(tableau_A, tableau_B, tableau_C),
group_header = c("Modèle A","Modèle B","Modèle C"))%>%
as_flex_table()
# Affichage du tableau final
tableau_final
file.edit(".Rhistory")
### différence d'âge entre les sexe
dif_age <- feuille1 %>% tbl_summary(
include = c(endline_age),
by = endline_sex,
statistic = ~"{mean}",
label = list(endline_age ~ "Age du répondant"),
digits = ~ 1
)%>% bold_labels() %>% italicize_levels() %>%
add_difference() %>%
modify_header(
list(
all_stat_cols() ~ "{level} \n {n}, ({style_percent(p)}%)"
)
)
diff_age
### différence d'âge entre les sexe
diff_age <- feuille1 %>% tbl_summary(
include = c(endline_age),
by = endline_sex,
statistic = ~"{mean}",
label = list(endline_age ~ "Age du répondant"),
digits = ~ 1
)%>% bold_labels() %>% italicize_levels() %>%
add_difference() %>%
modify_header(
list(
all_stat_cols() ~ "{level} \n {n}, ({style_percent(p)}%)"
)
)
diff_age
diff_age
### différence d'âge entre les sexe
diff_age <- feuille1 %>% tbl_summary(
include = c(endline_age),
by = endline_sex,
statistic = ~"{mean}",
label = list(endline_age ~ "Age du répondant"),
digits = ~ 1
)%>% bold_labels() %>% italicize_levels() %>%
add_difference() %>%
modify_header(
list(
all_stat_cols() ~ "{level} \n {n}, ({style_percent(p)}%)"
)
) %>%
as_flex_table()
diff_age
diff_age
senegal2 = st_read("Bases/gadm41_SEN_shp/gadm41_SEN_2.shp")
View(senegal2)
# Chargement des données de la carte du Sénégal
# Nous lisons le fichier contenant la carte du Sénégal et le stockons
# dans la variable "senegal"
senegal = st_read("Bases/gadm41_SEN_shp/gadm41_SEN_2.shp")
# La fonction st_as_sf convertit l'objet "projet" en objet
# sf (spatial feature) en spécifiant les coordonnées GPS à utiliser
projet_map = st_as_sf(projet, coords = c("gps_menlongitude", "gps_menlatitude"), crs=st_crs(senegal), agr = "constant")
# Jointure des données du projet avec la carte du Sénégal
projet_map = st_join(projet_map, senegal)
# Création de la première carte avec la répartition des PME suivant le sexe
ggplot() +
geom_sf(data=senegal)+
geom_sf_text(data=senegal, aes(label=NAME_1))+
geom_sf(data=projet_map, aes(color=sexe), size=2)+
scale_color_manual(values=c("blue", "red"))+
labs(title = "Répartition des PME suivant le sexe",
subtitle = "Carte du Sénégal",
color = "Sexe") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, face = "bold"))+
coord_sf(datum = NA)+
annotation_scale(location = "bl", text_col = "black")+
annotation_north_arrow(location = "tl")
View(projet_map)
# Chargement des données de la carte du Sénégal
# Nous lisons le fichier contenant la carte du Sénégal et le stockons
# dans la variable "senegal"
senegal = st_read("Bases/gadm41_SEN_shp/gadm41_SEN_1.shp")
# La fonction st_as_sf convertit l'objet "projet" en objet
# sf (spatial feature) en spécifiant les coordonnées GPS à utiliser
projet_map = st_as_sf(projet, coords = c("gps_menlongitude", "gps_menlatitude"), crs=st_crs(senegal), agr = "constant")
# Jointure des données du projet avec la carte du Sénégal
projet_map = st_join(projet_map, senegal)
# Création de la première carte avec la répartition des PME suivant le sexe
ggplot() +
geom_sf(data=senegal)+
geom_sf_text(data=senegal, aes(label=NAME_1))+
geom_sf(data=projet_map, aes(color=sexe), size=2)+
scale_color_manual(values=c("blue", "red"))+
labs(title = "Répartition des PME suivant le sexe",
subtitle = "Carte du Sénégal",
color = "Sexe") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, face = "bold"))+
coord_sf(datum = NA)+
annotation_scale(location = "bl", text_col = "black")+
annotation_north_arrow(location = "tl")
senegal2 = st_read("Bases/gadm41_SEN_shp/gadm41_SEN_2.shp")
# La fonction st_as_sf convertit l'objet "projet" en objet
# sf (spatial feature) en spécifiant les coordonnées GPS à utiliser
projet_map2 = st_as_sf(projet, coords = c("gps_menlongitude", "gps_menlatitude"), crs=st_crs(senegal2), agr = "constant")
# Jointure des données du projet avec la carte du Sénégal
projet_map2 = st_join(projet_map2, senegal2)
View(projet2)
View(projet_map2)
# Création de la troisième carte avec la répartition des PME suivant prop
ggplot() +
geom_sf(data=senegal2)+
geom_sf_text(data=senegal2, aes(label=NAME_2))+
geom_sf(data=projet_map2, aes(color=q81), size=2)+
scale_color_manual(values=c("blue", "red"))+
labs(title = "Répartition des PME suivant propiétaire/locataire",
subtitle = "Carte du Sénégal",
color = "q81") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, face = "bold"))+
coord_sf(datum = NA)+
annotation_scale(location = "bl", text_col = "black")+
annotation_north_arrow(location = "tl")
# Modèle A : Modèle vide - Effet du traitement sur les intentions
modele_A <- multinom(intention ~ groupe, data = copie)
tableau_A <- tbl_regression(modele_A)
tableau_A
# Modèle A : Modèle vide - Effet du traitement sur les intentions
modele_A <- multinom(intention ~ groupe, data = copie)
tableau_A <- tbl_regression(modele_A)
# Modèle B : Effet du traitement sur les intentions en tenant compte de l'âge et du sexe
modele_B <- multinom(intention ~ groupe + age + sex, data = copie)
tableau_B <- tbl_regression(modele_B)
# Modèle C : Identique au modèle B mais en contrôlant le district
modele_C <- multinom(intention ~ groupe + age + sex + district, data = copie)
ggcoef_multinom(
modele_C,
exponentiate = TRUE)
plot(allEffects(modele_C))
tableau_C <- tbl_regression(modele_C)
# Création du tableau récapitulatif des résultats des trois modèles
tableau_final <- tbl_stack(
list(tableau_A, tableau_B, tableau_C),
group_header = c("Modèle A","Modèle B","Modèle C"))%>%
as_flex_table()
# Affichage du tableau final
tableau_final
tableau_B
tableau_final %>% bold_levels() %>% bold_labels()
tableau_final <- tbl_stack(
list(tableau_A, tableau_B, tableau_C),
group_header = c("Modèle A","Modèle B","Modèle C"))%>%bold_levels() %>% bold_labels()
tableau_final
senegal2 = st_read("Bases/gadm41_SEN_shp/gadm41_SEN_2.shp")
# La fonction st_as_sf convertit l'objet "projet" en objet
# sf (spatial feature) en spécifiant les coordonnées GPS à utiliser
projet_map2 = st_as_sf(projet, coords = c("gps_menlongitude", "gps_menlatitude"), crs=st_crs(senegal2), agr = "constant")
# Jointure des données du projet avec la carte du Sénégal
projet_map2 = st_join(projet_map2, senegal2)
# Création de la troisième carte avec la répartition des PME suivant prop
# Renommons la variable q81 Propriéte
projet_map <- projet_map %>% rename(Propriéte = q81)
ggplot() +
geom_sf(data=senegal2)+
geom_sf_text(data=senegal2, aes(label=NAME_2))+
geom_sf(data=projet_map2, aes(color=Propriéte), size=2)+
scale_color_manual(values=c("blue", "red"))+
labs(title = "Répartition des PME suivant la propriété",
subtitle = "Carte du Sénégal") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, face = "bold"))+
coord_sf(datum = NA)+
annotation_scale(location = "bl", text_col = "black")+
annotation_north_arrow(location = "tl")
senegal2 = st_read("Bases/gadm41_SEN_shp/gadm41_SEN_2.shp")
# La fonction st_as_sf convertit l'objet "projet" en objet
# sf (spatial feature) en spécifiant les coordonnées GPS à utiliser
projet_map2 = st_as_sf(projet, coords = c("gps_menlongitude", "gps_menlatitude"), crs=st_crs(senegal2), agr = "constant")
# Jointure des données du projet avec la carte du Sénégal
projet_map2 = st_join(projet_map2, senegal2)
# Création de la troisième carte avec la répartition des PME suivant prop
# Renommons la variable q81 Propriéte
projet_map <- projet_map %>% rename(Propriete = q81)
senegal2 = st_read("Bases/gadm41_SEN_shp/gadm41_SEN_2.shp")
# La fonction st_as_sf convertit l'objet "projet" en objet
# sf (spatial feature) en spécifiant les coordonnées GPS à utiliser
projet_map2 = st_as_sf(projet, coords = c("gps_menlongitude", "gps_menlatitude"), crs=st_crs(senegal2), agr = "constant")
# Jointure des données du projet avec la carte du Sénégal
projet_map2 = st_join(projet_map2, senegal2)
# Création de la troisième carte avec la répartition des PME suivant prop
# Renommons la variable q81 en Propriéte
projet_map2 <- projet_map2 %>% rename(Propriete = q81)
ggplot() +
geom_sf(data=senegal2)+
geom_sf_text(data=senegal2, aes(label=NAME_2))+
geom_sf(data=projet_map2, aes(color=Propriete), size=2)+
scale_color_manual(values=c("blue", "red"))+
labs(title = "Répartition des PME suivant la propriété",
subtitle = "Carte du Sénégal") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, face = "bold"))+
coord_sf(datum = NA)+
annotation_scale(location = "bl", text_col = "black")+
annotation_north_arrow(location = "tl")
library(GGally)
projet <- read_excel("Bases/Base_Partie 1.xlsx")
# q1 en region, q2 en déparement et q23 en sexe
projet <- projet %>%
rename(region = q1, departement = q2, sexe = q23)
projet <- projet %>%
mutate(sexe_2 = ifelse(sexe == "Femme", 1, 0))
langues <- projet %>%
select(key, starts_with("q24a_"))
langues <- langues %>%
mutate(parle = rowSums(.[2:ncol(.)]))
langues <- langues %>%
select(key, parle)
projet <- projet %>%
left_join(langues, by = "key")
View(projet)
data <- projet %>%
rename(Niveau_instruction = q25, Propiete = q81)
data <- data %>%
mutate(parle_français = ifelse(q24a_1 == 1, "Oui", "Non"))
View(data)
ggbivariate(data = data , outcome = "parle_français", explanatory = c("sexe", "region", "niveau_instruction", "Propriete"))
data <- projet %>%
rename(Niveau_instruction = q25, Propriete = q81)
data <- data %>%
mutate(parle_français = ifelse(q24a_1 == 1, "Oui", "Non"))
ggbivariate(data = data , outcome = "parle_français", explanatory = c("sexe", "region", "Niveau_instruction", "Propriete"))
data <- projet %>%
rename(Niveau_instruction = q25, Propriete = q81)
data <- data %>%
mutate(parle_français = ifelse(q24a_1 == 1, "Oui", "Non"),
parle_wolof = ifelse(q24a_2 == 1, "Oui", "Non"))
ggbivariate(data = data , outcome = "parle_français", explanatory = c("sexe", "region", "Niveau_instruction", "Propriete"))
# Chargement les données
feuille1 <- read_excel("Bases/Base_Partie 2.xlsx", sheet = 1)
# Renommons la variable "country_destination" en "destination" et
# définissons les valeurs négatives comme manquantes
feuille1 <- feuille1 %>%
rename(destination = country_destination) %>%
mutate(destination = ifelse(destination < 0, NA, destination))
# Calculons la médiane des valeurs non aberrantes (différentes de 999) dans la variable "age" et remplacer les valeurs 999 par la médiane
feuille1 <- feuille1 %>%
mutate(age = replace(age, age == 999, median(age[age != 999], na.rm = TRUE)))
# Créons la variable tranche_age contenant des tranches d'âge de
# 5 ans
feuille1 <- feuille1 %>%
mutate(tranche_age = cut(age, breaks = seq(0, max(age), by = 5), include.lowest = TRUE))
feuille1 <- feuille1 %>%
group_by(enumerator) %>%
mutate(nombre_entretiens = n()) %>%
ungroup()
feuille1 <- feuille1 %>%
mutate(groupe = {set.seed(123); sample(c(0, 1), size = n(), replace = TRUE)})
# Charger les données de la deuxième feuille
feuille2 <- read_excel("Bases/Base_Partie 2.xlsx", sheet = 2)
# Fusion
feuille1 <- feuille1 %>%
left_join(feuille2, by = "district")
# Calcul la durée de l'entretien et indiquer la durée moyenne de l'entretien par enquêteur :
feuille1 <- feuille1 %>%
mutate(duree_entretien = endtime - starttime) %>%
group_by(enumerator) %>%
mutate(duree_moyenne_entretien = mean(duree_entretien)) %>%
ungroup()
copie = feuille1
feuille1 <- feuille1 %>%
rename_all(~paste0("endline_", .))
feuille1 %>%
tbl_summary(
by = endline_district,
include = c("endline_age", "endline_children_num"),
type = list(endline_children_num = "continuous"),
statistic = all_continuous() ~ "{mean}",
label=list( endline_age~ "Age moyen",
endline_children_num ~ "Nombre moyen d'enfants")
) %>%
add_overall() %>%
modify_header(label ~ "") %>%
modify_spanning_header(all_stat_cols() ~ "**District**") %>%
bold_labels() %>%
as_flex_table() %>%
fontsize(size = 10) %>%
width(width = 0.6)
# Test de différence d'âge entre les sexe
diff_age <- feuille1 %>% tbl_summary(
include = c(endline_age),
by = endline_sex,
statistic = ~"{mean}",
label = list(endline_age ~ "Age du répondant"),
digits = ~ 1
)%>% bold_labels() %>% italicize_levels() %>%
add_difference() %>%
modify_header(
list(
all_stat_cols() ~ "{level} \n {n}, ({style_percent(p)}%)"
)
) %>%
as_flex_table()
diff_age
# Création d'un nuage de points de l'âge en fonction du nombre d'enfants:
ggplot(feuille1, aes(x = endline_children_num, y = endline_age))+
geom_point(size = 2, alpha = 0.5, color = "#0072B2") +
labs(x = "Nombre d'enfants", y = "Âge") +
theme_minimal() +
scale_x_continuous(limits = c(0, 6) ,breaks = seq(0, 6, 1)) +
scale_y_continuous(limits = c(0, 50), breaks = seq(0, 50, 5))
# Estimation de l'effet de l'appartenance au groupe de traitement sur l'intention de migrer:
library(nnet)
regm <- multinom(intention ~ groupe ,data = copie)
tbl <- tbl_regression(regm, exponentiate = TRUE)
tbl
library(GGally)
ggcoef_multinom(
regm,
exponentiate = TRUE)
library(effects)
plot(allEffects(regm))
## tableau de régression avec 3 modèles
# Modèle A : Modèle vide - Effet du traitement sur les intentions
modele_A <- multinom(intention ~ groupe, data = copie)
tableau_A <- tbl_regression(modele_A)
# Modèle B : Effet du traitement sur les intentions en tenant compte de l'âge et du sexe
modele_B <- multinom(intention ~ groupe + age + sex, data = copie)
tableau_B <- tbl_regression(modele_B)
# Modèle C : Identique au modèle B mais en contrôlant le district
modele_C <- multinom(intention ~ groupe + age + sex + district, data = copie)
ggcoef_multinom(
modele_C,
exponentiate = TRUE)
plot(allEffects(modele_C))
tableau_C <- tbl_regression(modele_C)
# Création du tableau récapitulatif des résultats des trois modèles
tableau_final <- tbl_stack(
list(tableau_A, tableau_B, tableau_C),
group_header = c("Modèle A","Modèle B","Modèle C"))%>%
as_flex_table()
# Création de la troisième carte avec la répartition des PME suivant prop
# Renommons la variable q81 en Propriéte
projet_map2 <- projet_map2 %>% rename(Propriete = q81)
ggplot() +
geom_sf(data=senegal)+
geom_sf_text(data=senegal, aes(label=NAME_1))+
geom_sf(data=projet_map, aes(color=Propriete), size=2)+
scale_color_manual(values=c("blue", "red"))+
labs(title = "Répartition des PME suivant la propriété",
subtitle = "Carte du Sénégal") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, face = "bold"))+
coord_sf(datum = NA)+
annotation_scale(location = "bl", text_col = "black")+
annotation_north_arrow(location = "tl")
shiny::runApp('myapp')
runApp('myapp')
